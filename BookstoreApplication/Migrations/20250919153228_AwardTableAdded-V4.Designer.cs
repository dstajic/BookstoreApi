// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250919153228_AwardTableAdded-V4")]
    partial class AwardTableAddedV4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Fiction writer from USA",
                            DateOfBirth = new DateTime(1975, 5, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Science fiction author",
                            DateOfBirth = new DateTime(1980, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Children's books author",
                            DateOfBirth = new DateTime(1990, 2, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Alice Johnson"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Historical novels writer",
                            DateOfBirth = new DateTime(1965, 11, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Robert Brown"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Mystery novels author",
                            DateOfBirth = new DateTime(1985, 7, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Emily Davis"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Award for best fiction book",
                            Name = "Best Fiction",
                            StartYear = 2000
                        },
                        new
                        {
                            Id = 2,
                            Description = "Award for outstanding science fiction",
                            Name = "Sci-Fi Excellence",
                            StartYear = 2005
                        },
                        new
                        {
                            Id = 3,
                            Description = "Award for children's books",
                            Name = "Children's Choice",
                            StartYear = 2010
                        },
                        new
                        {
                            Id = 4,
                            Description = "Award for mystery novels",
                            Name = "Mystery Master",
                            StartYear = 2015
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AwardAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("awardYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("AwardId");

                    b.ToTable("AwardAuthorBridge", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            AwardId = 1,
                            awardYear = 2001
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            AwardId = 2,
                            awardYear = 2006
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            AwardId = 3,
                            awardYear = 2011
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            AwardId = 1,
                            awardYear = 2000
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            AwardId = 4,
                            awardYear = 2016
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            AwardId = 2,
                            awardYear = 2005
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            AwardId = 1,
                            awardYear = 2007
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            AwardId = 3,
                            awardYear = 2012
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            AwardId = 4,
                            awardYear = 2017
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            AwardId = 2,
                            awardYear = 2018
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            AwardId = 3,
                            awardYear = 2013
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            AwardId = 4,
                            awardYear = 2019
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 3,
                            AwardId = 1,
                            awardYear = 2014
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 4,
                            AwardId = 2,
                            awardYear = 2015
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            AwardId = 3,
                            awardYear = 2020
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "978-0-1111-1111-1",
                            PageCount = 320,
                            PublishedDate = new DateTime(2001, 5, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Dawn"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            ISBN = "978-0-1111-1111-2",
                            PageCount = 280,
                            PublishedDate = new DateTime(2005, 6, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Space Odyssey"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            ISBN = "978-0-1111-1111-3",
                            PageCount = 150,
                            PublishedDate = new DateTime(2010, 3, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Magic Tales"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            ISBN = "978-0-1111-1111-4",
                            PageCount = 400,
                            PublishedDate = new DateTime(1999, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "History of Rome"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            ISBN = "978-0-1111-1111-5",
                            PageCount = 250,
                            PublishedDate = new DateTime(2015, 9, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Mystery Manor"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 1,
                            ISBN = "978-0-1111-1111-6",
                            PageCount = 300,
                            PublishedDate = new DateTime(2008, 4, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Ocean Secrets"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 2,
                            ISBN = "978-0-1111-1111-7",
                            PageCount = 360,
                            PublishedDate = new DateTime(2012, 7, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Future Worlds"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            ISBN = "978-0-1111-1111-8",
                            PageCount = 200,
                            PublishedDate = new DateTime(2018, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Fairy Land"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            ISBN = "978-0-1111-1111-9",
                            PageCount = 420,
                            PublishedDate = new DateTime(2000, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Ancient Empires"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "978-0-1111-1111-10",
                            PageCount = 290,
                            PublishedDate = new DateTime(2016, 6, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Detective Stories"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            ISBN = "978-0-1111-1111-11",
                            PageCount = 310,
                            PublishedDate = new DateTime(2011, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Lost Kingdom"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            ISBN = "978-0-1111-1111-12",
                            PageCount = 270,
                            PublishedDate = new DateTime(2014, 12, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Starlight Adventures"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, NY",
                            Name = "Sunshine Books",
                            Website = "http://sunshinebooks.com"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave, LA",
                            Name = "Moonlight Press",
                            Website = "http://moonlightpress.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Rd, TX",
                            Name = "Star Publishers",
                            Website = "http://starpublishers.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AwardAuthor", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AwardAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AwardAuthors")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AwardAuthors");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AwardAuthors");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
